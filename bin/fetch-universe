#!/usr/bin/env php
<?php

/**
 * @param string $cwd Current working directory
 * @param string $cmd Command to execute
 * @return int
 *   Exit code from command
 */
function run($cwd, $cmd) {
  $old = getcwd();
  fwrite(STDERR, "\nRUN[[$cwd]]: $cmd\n");
  chdir($cwd);
  passthru($cmd, $status);
  chdir($old);
  return $status;
}

########################################################################################
if (empty($argv[1])) {
  fwrite(STDERR, "Missing base directory\n");
  fwrite(STDERR, "usage: fetch-universe <base-dir>\n");
  exit(1);
}

$basedir = realpath($argv[1]);

if (!file_exists($basedir) || !is_dir($basedir)) {
  fwrite(STDERR, "Missing base directory\n");
  fwrite(STDERR, "usage: fetch-universe <base-dir>\n");
  exit(1);
}


########################################################################################
$exts = json_decode(file_get_contents('https://civicrm.org/extdir/git-urls.json'), 1);
$core = array(
  'civicrm-core' => array(
    'git_url' => 'https://github.com/civicrm/civicrm-core',
  ),
  'civicrm-backdrop-1.x' => array(
    'git_url' => 'https://github.com/civicrm/civicrm-backdrop',
    'git_branch' => '1.x-master',
  ),
  'civicrm-drupal-6.x' => array(
    'git_url' => 'https://github.com/civicrm/civicrm-drupal',
    'git_branch' => '6.x-master',
  ),
  'civicrm-drupal-7.x' => array(
    'git_url' => 'https://github.com/civicrm/civicrm-drupal',
    'git_branch' => '7.x-master',
  ),
  'civicrm-drupal-8.x' => array(
    'git_url' => 'https://github.com/civicrm/civicrm-drupal',
    'git_branch' => '8.x-master',
  ),
  'civicrm-joomla' => array(
    'git_url' => 'https://github.com/civicrm/civicrm-joomla',
  ),
  'civicrm-l10n' => array(
    'git_url' => 'https://github.com/civicrm/l10n',
  ),
  'civicrm-packages' => array(
    'git_url' => 'https://github.com/civicrm/civicrm-packages',
  ),
  'civicrm-wordpress' => array(
    'git_url' => 'https://github.com/civicrm/civicrm-wordpress',
  ),
);
$deprecated = array('civicrm-drupal');


########################################################################################
$statuses = array(); // array(string $key => int $code)

$repos = array_merge($exts, $core);
ksort($repos);
foreach ($repos as $key => $ext) {
  $dir = "$basedir/$key";
  if (empty($ext['git_url'])) {
    fwrite(STDERR, "$key does not have git_url\n");
    $statuses[$key] = 1;
  }
  elseif (file_exists($dir)) {
    $statuses[$key] = run($dir, "git pull");
  }
  else {
    $branchExpr = empty($ext['git_branch']) ? '' : ('-b ' . escapeshellarg($ext['git_branch']));
    $statuses[$key] = run($basedir, sprintf("git clone %s %s %s", escapeshellarg($ext['git_url']), escapeshellarg($dir), $branchExpr));
  }

  if (file_exists("$dir/composer.json") && $statuses[$key] == 0) {
    $statuses[$key] = run($dir, "composer install");
  }
}

$msgs = array();
foreach ($deprecated as $key) {
  $dir = "$basedir/$key";
  if (file_exists($dir)) {
    $msgs[] = "The folder \"$key\" is deprecated. Consider removing it";
  }
}

########################################################################################
$ok = array_keys(array_filter($statuses, function($val){
  return ($val == 0);
}));
$err = array_keys(array_filter($statuses, function($val){
  return ($val != 0);
}));

print_r(array(
  'ok' => $ok,
  'err' => $err,
  'msgs' => $msgs,
));
exit(array_sum($statuses));
